{
  "info": {
    "title": "CustomSecurityDB",
    "x-type": "odata",
    "x-connector": "mssql",
    "x-connector-version": 14
  },
  "definitions": {
    "Role": {
      "x-table": "dbo.Roles",
      "resource": "Roles",
      "required": [],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Role",
              "name": "UserRoles",
              "type": "UserRole"
            }
          ]
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "UserRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRole"
          }
        }
      }
    },
    "User": {
      "x-table": "dbo.Users",
      "resource": "Users",
      "required": [
        "Email"
      ],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "User",
              "name": "UserRoles",
              "type": "UserRole"
            }
          ]
        },
        "Email": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "PasswordHash": {
          "type": "string",
          "length": 100
        },
        "UserRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRole"
          }
        }
      }
    },
    "UserRole": {
      "x-table": "dbo.UserRoles",
      "resource": "UserRoles",
      "required": [
        "UserId",
        "RoleId"
      ],
      "properties": {
        "User": {
          "type": "object",
          "$ref": "#/definitions/User"
        },
        "UserId": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Users",
            "parentEntityType": "User",
            "type": "User",
            "principalKey": "Id",
            "name": "User",
            "textProperty": "Email",
            "navigationProperty": "UserRoles"
          }
        },
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        },
        "RoleId": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Roles",
            "parentEntityType": "Role",
            "type": "Role",
            "principalKey": "Id",
            "name": "Role",
            "textProperty": "Name",
            "navigationProperty": "UserRoles"
          }
        }
      }
    }
  },
  "paths": {
    "/Roles": {
      "get": {
        "operationId": "getRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createRole",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Users": {
      "get": {
        "operationId": "getUsers",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UserRoles": {
      "get": {
        "operationId": "getUserRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UserRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createUserRole",
        "parameters": [
          {
            "in": "body",
            "name": "UserRole",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Roles({Id})": {
      "delete": {
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Users({Id})": {
      "delete": {
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getUserById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelUserChanges",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UserRoles(UserId={UserId},RoleId={RoleId})": {
      "delete": {
        "operationId": "deleteUserRole",
        "parameters": [
          {
            "in": "path",
            "name": "UserId",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "RoleId",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getUserRoleByUserIdAndRoleId",
        "parameters": [
          {
            "in": "path",
            "name": "UserId",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "RoleId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUserRole",
        "parameters": [
          {
            "in": "path",
            "name": "UserId",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "RoleId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "UserRole",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelUserRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "UserRole",
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "basePath": "/odata/CustomSecurityDB",
  "host": "localhost:5000",
  "schemes": [
    "http"
  ]
}